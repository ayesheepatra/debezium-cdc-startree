connector.class=io.debezium.connector.postgresql.PostgresConnector
tasks.max=1
schema.history.internal.consumer.sasl.jaas.config=software.amazon.msk.auth.iam.IAMLoginModule required;
bootstrap.servers=<REDACTED>
internal.key.converter.schemas.enable=false
topic.prefix=postgresii
decimal.handling.mode=double
sasl.mechanism=AWS_MSK_IAM
transforms.unwrap.drop.tombstones=true
sasl.jaas.config=software.amazon.msk.auth.iam.IAMLoginModule required;
sasl.client.callback.handler.class=software.amazon.msk.auth.iam.IAMClientCallbackHandler
value.converter=org.apache.kafka.connect.json.JsonConverter
key.converter=org.apache.kafka.connect.json.JsonConverter
schema.history.internal.producer.sasl.mechanism=AWS_MSK_IAM
schema.history.internal.consumer.sasl.client.callback.handler.class=software.amazon.msk.auth.iam.IAMClientCallbackHandler
database.user=<REDACTED>
database.dbname=<REDACTED>
schema.history.internal.producer.sasl.client.callback.handler.class=software.amazon.msk.auth.iam.IAMClientCallbackHandler
time.precision.mode=connect
database.server.name=inventory
database.port=5432
plugin.name=pgoutput
security.protocol=SASL_SSL
key.converter.schemas.enable=false
internal.key.converter=org.apache.kafka.connect.json.JsonConverter
include.unknown.datatypes=true
database.hostname=<REDACTED>
internal.value.converter.schemas.enable=false
database.password=<REDACTED>
value.converter.schemas.enable=false
internal.value.converter=org.apache.kafka.connect.json.JsonConverter
schema.history.internal.producer.sasl.jaas.config=software.amazon.msk.auth.iam.IAMLoginModule required;
schema.history.internal.consumer.sasl.mechanism=AWS_MSK_IAM
snapshot.mode=initial